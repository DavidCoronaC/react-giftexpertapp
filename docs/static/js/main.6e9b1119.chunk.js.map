{"version":3,"sources":["components/CategoriesAdd.js","helpers/GetGifts.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGift.js","GiftExpertApp.js","index.js"],"names":["CategoriesAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGift","category","a","console","log","url","encodeURI","fetch","resp","json","data","gift","map","img","id","images","downsized_medium","title","GiftGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGift","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAuCeA,EApCO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACPC,mBAAS,IADF,mBACpCC,EADoC,KACxBC,EADwB,KAiB3C,OACE,0BAAMC,SAXa,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAOlB,2BACMO,KAAK,OACLC,MAAQT,EACRU,SAnBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,QAmBnBG,YAAY,wB,uBC1BXC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACnBC,QAAQC,IAAIH,GACRI,EAFe,iDAGwBC,UAAWL,GAHnC,+DAIFM,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,IAClCY,MAAOJ,EAAII,UAVM,kBAadN,GAbc,4CAAH,sDCYLO,EAVM,SAAC,GAAsB,IAAnBD,EAAkB,EAAlBA,MAAOZ,EAAW,EAAXA,IAE5B,OADAF,QAAQC,IAAKa,EAAOZ,GAEhB,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAKJ,IACtB,2BAAIA,KCeDK,EAnBC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAN,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCwB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBzB,QAAQC,IAAIwB,GACZH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDdyBK,CAAc5B,GAAlCc,EAFoB,EAE1BL,KAAca,EAFY,EAEZA,QAIpB,OACE,oCACI,wBAAIJ,UAAU,qCAAsClB,GAClDsB,GAAW,uBAAGJ,UAAW,oCAAd,WACb,yBAAKA,UAAU,aACdJ,EAAOH,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eAAciB,IAAMjB,EAAIC,IAASD,UEkB9BkB,EA7BO,WAAM,MAIY7C,mBAAS,CAAC,WAJtB,mBAIjB8C,EAJiB,KAIL/C,EAJK,KAYxB,OACI,oCACI,6CACA,kBAAC,EAAD,CAAeA,cAAgBA,IAC/B,6BAEA,4BAEQ+C,EAAWpB,KAAK,SAAAF,GAAI,OACpB,kBAAC,EAAD,CAASoB,IAAKpB,EAAMT,SAAUS,U,MCjBlDuB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.6e9b1119.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst CategoriesAdd = ( {setCategories} ) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n\n      if(inputValue.trim().length > 2){\n          setCategories(cats => [ inputValue, ...cats  ]);\n          setInputValue('');\n      }\n      \n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n            type=\"text\"\n            value={ inputValue }\n            onChange={handleInputChange}\n            placeholder=\"Ingresar Texto...\" />\n    </form>\n  );\n};\n\n\n// Para poder establecer propiedades de los Props\n// es necesario utilizar la palabra reservada -- Func.require\nCategoriesAdd.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\nexport default CategoriesAdd;\n","export const getGift = async (category) => {\n    console.log(category);\n  const url =\n    `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=wRRKoEbav5HdcYTzT5qFNJXti0FJTMoP`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gift = data.map((img) => {\n    return {\n      id: img.id,\n      url: img.images?.downsized_medium.url,\n      title: img.title,\n    };\n  });\n  return gift;\n};","import React from 'react'\n\nconst GiftGridItem = ( { title, url } ) => {\n    console.log( title, url );\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={ url } alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GiftGridItem","import React from \"react\";\nimport { useFetchGift } from \"../hooks/useFetchGift\";\nimport GiftGridItem from './GiftGridItem'\nconst GifGrid = ({ category }) => {\n\nconst { data: images, loading } = useFetchGift( category );\n\n\n  // getGift();\n  return (\n    <>\n        <h3 className='animate__animated animate__fadeIn' >{category}</h3>\n        { loading && <p className= 'animate__animated animate__flash'>Loading</p> }\n        <div className='card-grid'>\n        {images.map( img => (\n            <GiftGridItem key={ img.id } {...img} />\n        ))}\n        </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGift } from \"../helpers/GetGifts\";\n\nexport const useFetchGift = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGift(category).then((imgs) => {\n      console.log(imgs);\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, {useState} from 'react'\nimport CategoriesAdd from './components/CategoriesAdd'\nimport GifGrid from './components/GifGrid'\n\nconst GiftExpertApp = () => {\n\n    // const categories = ['Naruto', 'Dragon ball', 'Pokemon']\n\n    const [categories, setCategories] = useState(['Naruto'])\n\n    // const handleAdd = () => {\n    //     setCategories([\n    //         ...categories,\n    //         'Pikachu'\n    //     ])\n    // }\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <CategoriesAdd setCategories={ setCategories } />\n            <hr/>\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n            <ol>\n                {\n                    categories.map( data => (\n                    <GifGrid key={data} category={data}/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GiftExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\n\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}